# For a direct USB cable connection, the port name is typically
# /dev/ttyACM# where is # is a number such as 0, 1, 2, etc
# For a wireless connection like XBee, the port is typically
# /dev/ttyUSB# where # is a number such as 0, 1, 2, etc.

port: /dev/ttyUSB0
baud: 57600
timeout: 0.5

rate: 50
sensorstate_rate: 10

# Are we using the base controller code
use_base_controller: True

# Rate to publish odom info
base_controller_rate: 10

# For a robot that uses base_footprint, change base_frame to base_footprint
base_frame: base_footprint

# Are we also using an IMU for heading data
use_imu_heading: False

# Publish the odom->base_link transform?
publish_odom_base_transform: True

# === Robot drivetrain parameters
wheel_diameter: 0.2
wheel_track: 0.29
encoder_resolution: 6000 #8384 # from Pololu for 131:1 motors
gear_reduction: 7.22
#motors_reversed: True

# === PID parameters
#Kp: 10
#Kd: 12
#Ki: 0
#Ko: 50
#accel_limit: 1.0

# == Odometry calibration correction factors
odom_linear_scale_correction: 0.99
odom_angular_scale_correction: 1.07

# === Sensor definitions.  Examples only - edit for your robot.
#     Sensor type can be one of the following:
#	  * Ping
#	  * GP2D12
#	  * Analog
#	  * Digital
#	  * PololuMotorCurrent
#	  * PhidgetsVoltage
#	  * PhidgetsCurrent (20 Amp, DC)


sensors: {
  #system_voltage:   {pin: 0, type: Analog, rate: 5},
  #system_current:   {pin: 1, type: PhidgetsCurrent, rate: 5},
  #motor_current_right:  {pin: 1, type: PololuMotorCurrent, rate: 5},
  #ir_front_center:      {pin: 2, type: GP2D12, rate: 10},
  #sonar_front_center:   {pin: 5, type: Ping, rate: 10},
  #onboard_led:           {pin: 13, type: Digital, rate: 5, direction: output}
}


